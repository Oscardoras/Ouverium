# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build & Test (${{ matrix.os }}, ${{ matrix.build_type }}, ${{ matrix.compiler.c }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        generator: [Ninja]
        build_type: [Release]
        compiler:
          - {c: gcc, cxx: g++}
          - {c: clang, cxx: clang++}
        include:
          - os: windows-latest
            generator: Ninja
            build_type: Release
            compiler: {c: gcc, cxx: g++}
          - os: macos-latest
            generator: Ninja
            build_type: Release
            compiler: {c: clang, cxx: clang++}

    env:
      SRC_PATH: ${{ github.workspace }}
      BUILD_PATH: ${{ github.workspace }}/build

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: >
        cmake -S "${{ env.SRC_PATH }}" -B "${{ env.BUILD_PATH }}"
        -G ${{ matrix.generator }}
        -DCMAKE_C_COMPILER=${{ matrix.compiler.c }}
        -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DOUVERIUM_WITH_WXWIDGET=OFF

    - name: Build
      run: cmake --build ${{ env.BUILD_PATH }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ env.BUILD_PATH }}
      run: ctest --build-config ${{ matrix.build_type }}
