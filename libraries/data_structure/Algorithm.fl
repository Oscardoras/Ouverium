using "List.fl";


is_sorted : list \ (list ~ List) |-> {
    sorted := true;
    i := list->iterator_first();
    j := list->iterator_first();
    
    if (i->has_next()) {
        i->next();
        j->next();
        while (sorted & j->has_next()) {
            sorted := i->get() <= j->next();
            i->next()
        }
    };

    sorted
};

insertion_sort : list \ (is list List) |-> {
    i := list->iterator_first();
    
    while (i->has_next()) {
        x := i->next();

        j := $i;
        j2 := $j;
        while (j->has_previous() & j->previous() > x) {
            j2->get() := j->get();
            j2->previous()
        };

        j2->get() := x
    };

    list
}