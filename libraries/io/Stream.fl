import "Type.fl";


class Stream {
    (~) : (stream, Stream) |-> {
        import("system").stream_is(stream)
    };

    Stream::(this.read |-> (
        () |-> {
            import("system").stream_read(this)
        }
    ));

    # Stream::(this.async_read |-> (
    #     (Function callback) |-> {
    #         import("system").stream_async_read(this, callback)
    #     }
    # ));

    Stream::(this.has |-> (
        () |-> {
            import("system").stream_has(this)
        }
    ));

    Stream::(this.write |-> (
        data |-> {
            import("system").stream_write(this, data)
        }
    ));

    # Stream::(this.async_write |-> (
    #     (data, Function callback) |-> {
    #         import("system").stream_async_write(this, data, callback)
    #     }
    # ));

    Stream::(this.flush |-> (
        () |-> {
            import("system").stream_flush(this)
        }
    ));
};
