import "Type.fl";
import "String.fl";
import "io/Stream.fl";


class File {
    (~) : (file, File) |-> {
        import("system").file_is(file)
    };

    File : (String path) |-> {
        import("system").file_open(path)
    };

    File::(this.close |-> (
        () |-> {
            import("system").file_close(this)
        }
    ));

    static File::(
        this.working_directory |-> {
            import("system").file_get_working_directory()
        },
        (this.working_directory, value) |-> {
            import("system").file_set_working_directory(value);
            import("system").file_get_working_directory()
        }
    );

    File.exists : path |-> {
        import("system").file_exists(path)
    };

    File.is_directory : path |-> {
        import("system").file_is_directory(path)
    };

    File.create_directories : path |-> {
        import("system").file_create_directories(path)
    };

    File.copy : (from_path, to_path) |-> {
        import("system").file_copy(from_path, to_path)
    };

    File.delete : path |-> {
        import("system").file_delete(path)
    };
};
