import "Type.fl";
import "String.fl";
import "io/Stream.fl";


class Socket {
    (~) : (socket, Socket) |-> {
        import("system").socket_is(socket)
    };

    Socket : (String address, Int port) |-> {
        import("system").socket_open(address, port)
    };

    Socket::(
        this.blocking |-> {
            import("system").socket_get_blocking(this)
        },
        (this.blocking, value) |-> {
            import("system").socket_set_blocking(this, value);
            import("system").socket_get_blocking(this)
        }
    );

    Socket::(this.close |-> (
        () |-> {
            import("system").socket_close(this)
        }
    ));

    class (Socket.Acceptor) {
        (~) : (acceptor, Type) \ (Type === Socket.Acceptor) |-> {
            import("system").acceptor_is(acceptor)
        };

        Socket.Acceptor : (Int port) |-> {
            import("system").acceptor_open(port)
        };

        (Socket.Acceptor)::(
            this.blocking |-> {
                import("system").acceptor_get_blocking(this)
            },
            (this.blocking, value) |-> {
                import("system").acceptor_set_blocking(this, value);
                import("system").acceptor_get_blocking(this)
            }
        );

        (Socket.Acceptor)::(this.accept |-> (
            () |-> {
                import("system").acceptor_accept(this)
            }
        ));

        (Socket.Acceptor)::(this.close |-> (
            () |-> {
                import("system").acceptor_close(this)
            }
        ));
    };
};
