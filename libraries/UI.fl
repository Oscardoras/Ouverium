import "Type.fl";
import "Event.fl";
import "String.fl";


UI := ();


class (UI.Layout) {
    UI.Layout.None := {};
    UI.Layout.None :~ UI.Layout;
    UI.Layout.None._id := -1;

    UI.Layout.Vertical := {};
    UI.Layout.Vertical :~ UI.Layout;
    UI.Layout.Vertical._id := 1;

    UI.Layout.Horizontal := {};
    UI.Layout.Horizontal :~ UI.Layout;
    UI.Layout.Horizontal._id := 2;

    UI.Layout.VerticalWrap := {};
    UI.Layout.VerticalWrap :~ UI.Layout;
    UI.Layout.VerticalWrap._id := 3;

    UI.Layout.HorizontalWrap := {};
    UI.Layout.HorizontalWrap :~ UI.Layout;
    UI.Layout.HorizontalWrap._id := 4;
};

class (UI.Alignment) {
    UI.Alignment.Start := {};
    UI.Alignment.Start :~ UI.Alignment;
    UI.Alignment.Start._id := 0;

    UI.Alignment.Center := {};
    UI.Alignment.Center :~ UI.Alignment;
    UI.Alignment.Center._id := 1;

    UI.Alignment.End := {};
    UI.Alignment.End :~ UI.Alignment;
    UI.Alignment.End._id := 2;
};

class (UI.Widget) {
    (UI.Widget)::(this.create_widget |-> (
        () |-> {
            if (defined(this.children)) {
                foreach(this.children, child |-> {
                    child.create(this);
                });
            };

            this :<- this._args;
            this._args := {};
        }
    ));

    (UI.Widget)::(
        this.visible |-> (
            import("system").ui_visible_get(this)
        ),
        (this.visible, Bool visibility) |-> (
            import("system").ui_visible_set(this, visibility);
            visibility
        )
    );

    (UI.Widget)::(
        this.position |-> (
            import("system").ui_position_get(this)
        ),
        (this.position, (x, y)) |-> (
            import("system").ui_position_set(this, x, y);
            (x, y)
        )
    );

    (UI.Widget)::(
        this.size |-> (
            import("system").ui_size_get(this)
        ),
        (this.size, (x, y)) |-> (
            import("system").ui_size_set(this, x, y);
            (x, y)
        )
    );

    (UI.Widget)::(
        this.min_size |-> (
            import("system").ui_min_size_get(this)
        ),
        (this.min_size, (x, y)) |-> (
            import("system").ui_min_size_set(this, x, y);
            (x, y)
        )
    );

    (UI.Widget)::(
        this.max_size |-> (
            import("system").ui_max_size_get(this)
        ),
        (this.max_size, (x, y)) |-> (
            import("system").ui_max_size_set(this, x, y);
            (x, y)
        )
    );

    (UI.Widget)::(
        this.layout |-> (
            import("system").ui_layout_get(this)
        ),
        (this.layout, UI.Layout layout) |-> (
            import("system").ui_layout_set(this, layout._id);
            layout
        )
    );

    (UI.Widget)::(
        this.proportion |-> (
            import("system").ui_proportion_get(this)
        ),
        (this.proportion, Int proportion) |-> (
            import("system").ui_proportion_set(this, proportion);
            proportion
        )
    );

    (UI.Widget)::(
        this.align |-> (
            import("system").ui_align_get(this)
        ),
        (this.align, UI.Alignment align) |-> (
            import("system").ui_align_set(this, align._id);
            align
        )
    );

    (UI.Widget)::(
        this.expand |-> (
            import("system").ui_expand_get(this)
        ),
        (this.expand, Bool expand) |-> (
            import("system").ui_expand_set(this, expand);
            expand
        )
    );

    (UI.Widget)::(
        this.keep_ratio |-> (
            import("system").ui_keep_ratio_get(this)
        ),
        (this.keep_ratio, Bool keep_ratio) |-> (
            import("system").ui_keep_ratio_set(this, keep_ratio);
            keep_ratio
        )
    );
};


class (UI.Window) extends (UI.Widget) {
    UI.Window : this |-> {
        UI.Widget(this);

        this.on_close := Event();

        if (defined (this._args.on_close)) {
            this.on_close :+= this._args.on_close;
        };

        import("system").ui_window_closed(this, () |-> {
            this.on_close();
        });

        this
    };

    (UI.Window)::(
        this.title |-> {
            import("system").ui_window_title_get(this)
        },
        (this.title, String value) |-> {
            import("system").ui_window_title_set(this, value);
            value
        }
    );

    (UI.Window)::(this.open |-> (
        () |-> {
            this.visible := true;
        }
    ));

    (UI.Window)::(this.close |-> (
        () |-> {
            this.visible := false;
        }
    ));
};


class (UI.Frame) extends (UI.Window) {
    UI.Frame : (args, Array children) |-> {
        this := import("system").ui_frame_new();
        this :~ (UI.Frame);

        this.children := children;
        this._args := args;

        UI.Window(this)
    };

    (UI.Frame)::(this.create |-> (
        () |-> {
            import("system").ui_frame_create(this, {});

            this.create_widget();
        } :
        (UI.Widget parent) |-> {
            import("system").ui_frame_create(this, parent);

            this.create_widget();
        }
    ));
};


class (UI.Dialog) extends (UI.Window) {
    UI.Dialog : (args, Array children) |-> {
        this := import("system").ui_dialog_new();
        this :~ (UI.Dialog);

        this.children := children;
        this._args := args;

        UI.Window(this)
    };

    (UI.Dialog)::(this.create |-> (
        () |-> {
            import("system").ui_dialog_create(this, {});

            this.create_widget();
        }
    ));

    (UI.Dialog)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_dialog_create(this, parent);

            this.create_widget();
        }
    ));
};


class (UI.Panel) extends (UI.Widget) {
    UI.Panel : (args, Array children) |-> {
        this := import("system").ui_panel_new();
        this :~ (UI.Panel);

        this.children := children;
        this._args := args;

        UI.Widget(this)
    };

    (UI.Panel)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_panel_create(this, parent);

            this.create_widget();
        }
    ));
};


class (UI.Control) extends (UI.Widget) {
    UI.Control : this |-> {
        UI.Widget(this);

        this.on_value_change := Event();

        if (defined (this._args.on_value_change)) {
            this.on_value_change :+= this._args.on_value_change;
        };

        this
    };

    (UI.Control)::(
        this.label |-> {
            import("system").ui_ctrl_label_get(this)
        },
        (this.label, String value) |-> {
            import("system").ui_ctrl_label_set(this, value);
            value
        }
    );
};


class (UI.ActivityIndicator) extends (UI.Control) {
    UI.ActivityIndicator : args |-> {
        this := (import("system").ui_activityindicator_new()) :~ (UI.ActivityIndicator);

        this._args := args;

        UI.Control(this)
    };

    (UI.ActivityIndicator)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_activityindicator_create(this, parent);

            this.create_widget();
        }
    ));

    (UI.ActivityIndicator)::(
        this.value |-> {
            import("system").ui_activityindicator_running_get(this)
        },
        (this.value, Bool v) |-> {
            import("system").ui_activityindicator_running_set(this, v);
            v
        }
    );
};


class (UI.Button) extends (UI.Control) {
    UI.Button : args |-> {
        this := (import("system").ui_button_new()) :~ (UI.Button);

        this._args := args;

        UI.Control(this)
    };

    (UI.Button)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_button_create(this, parent);

            import("system").ui_button_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));
};


class (UI.Calendar) extends (UI.Control) {
    UI.Calendar : args |-> {
        this := (import("system").ui_calendar_new()) :~ (UI.Calendar);

        this._args := args;

        UI.Control(this)
    };

    (UI.Calendar)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_calendar_create(this, parent);

            import("system").ui_calendar_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.Calendar)::(
        this.value |-> {
            import("system").ui_calendar_value_get(this)
        },
        (this.value, Int v) |-> {
            import("system").ui_calendar_value_set(this, v);
            v
        }
    );
};


class (UI.Checkbox) extends (UI.Control) {
    UI.Checkbox : args |-> {
        this := (import("system").ui_checkbox_new()) :~ (UI.Checkbox);

        this._args := args;

        UI.Control(this)
    };

    (UI.Checkbox)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_checkbox_create(this, parent);

            import("system").ui_checkbox_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.Checkbox)::(
        this.value |-> {
            import("system").ui_checkbox_value_get(this)
        },
        (this.value, Bool v) |-> {
            import("system").ui_checkbox_value_set(this, v);
            v
        }
    );
};

class (UI.Choice) extends (UI.Control) {
    UI.Choice : args |-> {
        this := (import("system").ui_choice_new()) :~ (UI.Choice);

        this._args := args;

        UI.Control(this)
    };

    (UI.Choice)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_choice_create(this, parent);

            import("system").ui_choice_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.Choice)::(
        this.length |-> {
            import("system").ui_choice_size_get(this)
        },
        (this.length, Int size) |-> {
            import("system").ui_choice_size_set(this, size);
            size
        }
    );

    (UI.Choice)::(this.ui_choice_string_get |-> (
        (Int i) |-> {
            import("system").ui_choice_string_get(this, i)
        }
    ));
    (UI.Choice)::(this.set_string |-> (
        (Int i, String c) |-> {
            import("system").ui_choice_string_set(this, i, c);
        }
    ));

    (UI.Choice)::(
        this.value |-> {
            import("system").ui_choice_value_get(this)
        },
        (this.value, Int v) |-> {
            import("system").ui_choice_value_set(this, v);
            v
        }
    );
};


class (UI.ColorPicker) extends (UI.Control) {
    UI.ColorPicker : args |-> {
        this := (import("system").ui_colorpicker_new()) :~ (UI.ColorPicker);

        this._args := args;

        UI.Control(this)
    };

    (UI.ColorPicker)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_colorpicker_create(this, parent);

            import("system").ui_colorpicker_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.ColorPicker)::(
        this.value |-> {
            import("system").ui_colorpicker_value_get(this)
        },
        (this.value, String v) |-> {
            import("system").ui_colorpicker_value_set(this, v);
            v
        }
    );
};

class (UI.DatePicker) extends (UI.Control) {
    UI.DatePicker : args |-> {
        this := (import("system").ui_datepicker_new()) :~ (UI.DatePicker);

        this._args := args;

        UI.Control(this)
    };

    (UI.DatePicker)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_datepicker_create(this, parent);

            import("system").ui_datepicker_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.DatePicker)::(
        this.value |-> {
            import("system").ui_datepicker_value_get(this)
        },
        (this.value, String v) |-> {
            import("system").ui_datepicker_value_set(this, v);
            v
        }
    );
};

class (UI.Gauge) extends (UI.Control) {
    UI.Gauge : args |-> {
        this := (import("system").ui_gauge_new()) :~ (UI.Gauge);

        this._args := args;

        UI.Control(this)
    };

    (UI.Gauge)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_gauge_create(this, parent);

            this.create_widget();
        }
    ));

    (UI.Gauge)::(
        this.range |-> {
            import("system").ui_gauge_range_get(this)
        },
        (this.range, Int v) |-> {
            import("system").ui_gauge_range_set(this, v);
            v
        }
    );

    (UI.Gauge)::(
        this.value |-> {
            import("system").ui_gauge_value_get(this)
        },
        (this.value, Int v) |-> {
            import("system").ui_gauge_value_set(this, v);
            v
        }
    );
};

class (UI.Hyperlink) extends (UI.Control) {
    UI.Hyperlink : args |-> {
        this := (import("system").ui_hyperlink_new()) :~ (UI.Hyperlink);

        this._args := args;

        UI.Control(this)
    };

    (UI.Hyperlink)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_hyperlink_create(this, parent);

            this.create_widget();
        }
    ));

    (UI.Hyperlink)::(
        this.value |-> {
            import("system").ui_hyperlink_url_get(this)
        },
        (this.value, String v) |-> {
            import("system").ui_hyperlink_url_set(this, v);
            v
        }
    );
};

class (UI.Label) extends (UI.Control) {
    UI.Label : args |-> {
        this := (import("system").ui_label_new()) :~ (UI.Label);

        this._args := args;

        UI.Control(this)
    };

    (UI.Label)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_label_create(this, parent);

            this.create_widget();
        }
    ));
};

class (UI.Text) extends (UI.Control) {
    UI.Text : args |-> {
        this := (import("system").ui_text_new()) :~ (UI.Text);

        this._args := args;

        UI.Control(this)
    };

    (UI.Text)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_text_create(this, parent);

            import("system").ui_text_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.Text)::(
        this.value |-> {
            import("system").ui_text_value_get(this)
        },
        (this.value, String v) |-> {
            import("system").ui_text_value_set(this, v);
            v
        }
    );

    (UI.Text)::(this.set_silent |-> (
        (String v) |-> {
            import("system").ui_text_value_set_silent(this, v);
        }
    ));

    (UI.Text)::(
        this.editable |-> {
            import("system").ui_text_editable_get(this)
        },
        (this.editable, Bool v) |-> {
            import("system").ui_text_editable_set(this, v);
            v
        }
    );
};

class (UI.MultilineText) extends (UI.Text) {
    UI.MultilineText : args |-> {
        this := (import("system").ui_multilinetext_new()) :~ (UI.MultilineText);

        this._args := args;

        UI.Control(this)
    };

    (UI.MultilineText)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_multilinetext_create(this, parent);

            import("system").ui_text_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));
};

class (UI.Search) extends (UI.Text) {
    UI.Search : args |-> {
        this := (import("system").ui_search_new()) :~ (UI.Search);

        this._args := args;

        this.on_cancel := Event();

        if (defined (this._args.on_cancel)) {
            this.on_cancel :+= this._args.on_cancel;
        };

        UI.Control(this)
    };

    (UI.Search)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_search_create(this, parent);

            import("system").ui_text_value_event(this, () |-> {
                this.on_value_change();
            });

            import("system").ui_search_cancel_event(this, () |-> {
                this.on_cancel();
            });

            this.create_widget();
        }
    ));
};

class (UI.Password) extends (UI.Text) {
    UI.Password : args |-> {
        this := (import("system").ui_password_new()) :~ (UI.Password);

        this._args := args;

        UI.Control(this)
    };

    (UI.Password)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_password_create(this, parent);

            import("system").ui_text_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));
};


class (UI.FilePicker) extends (UI.Control) {
    UI.FilePicker : args |-> {
        this := (import("system").ui_filepicker_new()) :~ (UI.FilePicker);

        this._args := args;

        UI.Control(this)
    };

    (UI.FilePicker)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_filepicker_create(this, parent);

            import("system").ui_filepicker_value_event(this, () |-> {
                this.on_value_change();
            });

            this.create_widget();
        }
    ));

    (UI.FilePicker)::(
        this.value |-> {
            import("system").ui_filepicker_value_get(this)
        },
        (this.value, String v) |-> {
            import("system").ui_filepicker_value_set(this, v);
            v
        }
    );
};


class (UI.Webview) extends (UI.Widget) {
    UI.Webview : args |-> {
        this := (import("system").ui_webview_new()) :~ (UI.Webview);

        this._args := args;

        this.on_url_change := Event();

        if (defined (this._args.on_url_change)) {
            this.on_url_change :+= this._args.on_url_change;
        };

        UI.Widget(this)
    };

    (UI.Webview)::(this.create |-> (
        (UI.Widget parent) |-> {
            import("system").ui_webview_create(this, parent);

            import("system").ui_webview_url_event(this, () |-> {
                this.on_url_change();
            });

            this.create_widget();
        }
    ));

    (UI.Webview)::(
        this.title |-> {
            import("system").ui_webview_title_get(this)
        },
        (this.title, value) |-> {}
    );

    (UI.Webview)::(
        this.url |-> {
            import("system").ui_webview_url_get(this)
        },
        (this.url, String url) |-> {
            import("system").ui_webview_url_set(this, url);
            url
        }
    );

    (UI.Webview)::(this.set_page |-> (
        (String html, String url) |-> {
            import("system").ui_webview_set_page(this, html, url);
        }
    ));
};
