(:~) : (object, type) |-> {
    Array.add(object._types, type);
    object
};

is : (object, type) \ (type !== Char & type !== Int & type !== Float & type !== Bool & type !== Array) |-> {
    found := false;
    l := Array.lenght(object._types);
    i := 0;
    while (!found & i < l) {
        if (Array.get(object._types, i) === type) {
            found := true
        } else {
            ++i
        }
    };
    found
};


extends;

class : type |-> {
    type
};
class : (type, extends, parents) |-> {
    type._parents := parents;

    type
};

_methods_getter;

getter : x \ {
    try {
        r := _methods_getter(x);
        true
    } catch (e |-> false)
} |-> {
    r
};

(::) : (type, method_getter) |-> {
    filters : (a |-> false) : ((this. .) \ (this ~ type) |-> true);

    mg := x \ {
        filters(x) &
        try {
            r := _methods_getter(x);
            true
        } catch (e |-> false)
    } |-> {
        r
    };
    _methods_getter : method_getter;
    mg
};
