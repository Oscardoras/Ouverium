import "Type.fl";
import "containers/ArrayList.fl";


Char : this \ (Array.lenght(this) == 1 & this[0] ~ Char) |-> {
    this[0]
};

Char::(this.digit |-> {
    Char "0" <= c & c <= Char "9"
});

Char::(this.alpha |-> {
    Char "A" <= c & c <= Char "Z" | Char "a" <= c & c <= Char "z"
});

Char::(this.alphanum |-> {
    Char.is_alpha(c) | Char.is_digit(c)
});


class String extends ArrayList;

(~) : (str, String) |-> {
    is str Array & {
        chars := true;
        l := Array.lenght(str);
        i := 0;
        while (chars & i < l) {
            if (Array.get(str, i) ~ Char) {
                ++i
            } else {
                chars := false
            }
        };
        chars
    }
};

String : (Char c) |-> {
    [c,]
};


String::(this.substring |-> (
    (Int begin) \ (begin >= 0 & begin < this.length) |-> {
        str := String();
        str.reserve(this.length - begin);

        for i from begin to (this.length) {
            str.add_back(this[i])
        };

        str
    } :
    (Int begin, Int len) \ (begin >= 0 & len >= 0 & begin+len < this.length) |-> {
        str := String();
        str.reserve(len);

        for i from 0 to len {
            str.add_back(this[begin+i])
        };

        str
    }
));

String::(this.index_of |-> (
    (String substring) |-> {
        index := -1;

        i := 0;
        while (index < 0 & i < this.length) {
            j := 0;
            while (j < substring.length & this[i+j] == substring[j]) {
                ++j
            };
            if (j == substring.length) {
                index := i
            } else {
                ++i
            }
        };

        index
    }
));


(@) : (String substr, String str) |-> {
    str.index_of(substr) >= 0
};

(+) : (String str1, String str2) |-> {
    str := String();

    (l1,l2) := (Array.lenght(str1), Array.lenght(str2));
    l := l1+l2;
    str.set_capacity(l);

    for i from 0 to l1 {
        str.add_last(Array.get(str1, i))
    };
    i := 0;
    for i from 0 to l2 {
        str.add_last(Array.get(str2, i))
    };

    str
};
(+) : (String str1, String str2) |-> {
    str := String();

    (l1,l2) := (str1.lenght(), str2.lenght());
    l := l1+l2;
    str.set_capacity(l);

    for i from 0 to l1 {
        str.add_last(str1[i])
    };
    i := 0;
    for i from 0 to l2 {
        str.add_last(str2[i])
    };

    str
};

(:+) : (String str1, String str2) |-> {
    (l1,l2) := (str1.lenght(), str2.lenght());
    l := l1+l2;

    if (str1.get_capacity() < l) {
        str1.set_capacity(l)
    };

    str1.set_capacity(l);

    for i from 0 to l2 {
        str1.add_last(str2[i])
    };

    str1
};