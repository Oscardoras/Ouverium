import "Type.fl";
import "containers/Iterable.fl";


class Range extends Iterable {
    Range : (Int end) |-> {
        Range(0, end, 1)
    };

    Range : (Int begin, Int end) |-> {
        Range(begin, end, 1)
    };

    Range : (Int begin, Int end, Int s) |-> {
        this := ();
        this :~ Range;

        this.begin := begin;
        this.end := end;
        this.step := s;

        this
    };

    Range::(
        this.iterator |-> {
            Range.Iterator(this, this.begin)
        },
        (this.iterator, value) |-> {}
    );

    class (Range.Iterator) extends (Iterable.Iterator) {
        Range.Iterator : (range, index) |-> {
            this := ();
            this :~ Range.Iterator;

            this._range := range;
            this._index := index;

            this
        };

        (Range.Iterator)::(this.is_valid |-> (
            () |-> {
                this._range.begin <= this._index & this._index < this._range.end
            }
        ));

        (Range.Iterator)::(this.get |-> (
            () \ (this.is_valid()) |-> {
                this._index
            }
        ));

        (Range.Iterator)::(this.next |-> (
            () |-> {
                this._index := this._index + this._range.step;
            }
        ));
    };
};
